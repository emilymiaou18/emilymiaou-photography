---
import Heading from '@/components/Heading.astro';
import { Badge } from '@/components/ui/badge';
import { buttonVariants } from '@/components/ui/button';
import RenderImageRow from '../components/RenderedRow';
import { type LanguageCode, defaultLanguage, type ui } from '@/i18n/ui';
import { Image } from 'astro:assets';
import { Code, ExternalLink } from 'lucide-react';
import ProjectGallery from '../components/ProjectGallery';
import type { TranslatedProject } from '../type';
import { render } from 'astro:content';
import type { imageMetadata } from 'astro/assets/utils';

// import * as React from 'react';

export type Props = {
  project: TranslatedProject;
  t: (typeof ui)[LanguageCode];
  lang: LanguageCode;
};

const { project, t, lang } = Astro.props;
 
// const verticalImages = project.galleryImagesTranslated?.filter((img) => img.id.includes('vertical'));
// const horizontalImages = project.galleryImagesTranslated?.filter((img) => img.id.includes('horizontal'));
// var horizontalIndex = 0;
// var verticalIndex = 0;
const allImages = project.galleryImagesTranslated?.slice() || [];

---

<div class="py-12 md:py-16">
  <article class="prose lg:prose-xl max-w-none dark:prose-invert">
    <a
      href={`${lang !== defaultLanguage ? `/${lang}` : ''}/weddings`}
      class={buttonVariants({ variant: 'ghost' }) + ' mb-6 no-underline'}
    >
      &larr; {t.projectDetailPage?.backToProjects ?? 'Back to Projects'}
    </a>

    <Heading title={project.title} />
    <div
      class="mb-4 flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-gray-600 dark:text-gray-400"
    >
      <!-- Category -->
      {
        project.categoryText && (
          <div class="flex items-center gap-2">
            <span class="text-foreground">
              {t.projectDetailPage?.categoryLabel ?? 'Category'}
            </span>
            <Badge variant="secondary">{project.categoryText}</Badge>
          </div>
        )
      }
      <!-- Date -->
      {
        project.dateText && (
          <div class="flex items-center gap-2">
            <span class="text-foreground">
              {t.projectDetailPage?.dateLabel ?? 'Date'}
            </span>
            <Badge variant="secondary">{project.dateText}</Badge>
          </div>
        )
      }
    </div>

    <!-- Detailed Description -->
    {
      project.detailedDescription && (
        <section class="mb-8">
          <h2>{t.projectDetailPage?.aboutTitle ?? 'About this project'}</h2>
          <p>{project.detailedDescription}</p>
        </section>
      )
    }
    
    <!-- Assuming number of verticals == number of horizontals can be divided by three -->
    {/* Gallery */}
    {project.galleryImagesTranslated && project.galleryImagesTranslated.length > 0 && (() => {
      const renderedRows = [];
      while (allImages.length >= 3) {
        const img1 = allImages[0];
        const img2 = allImages[1];
        const img3 = allImages[2];
        const img1Horizontal = img1.id.includes('horizontal');
        const img2Horizontal = img2.id.includes('horizontal');
        const img3Horizontal = img3.id.includes('horizontal');

        if (img1Horizontal && img2Horizontal) {
          renderedRows.push(<RenderImageRow images={[img1.src, img2.src]} layout="HH" />);
          allImages.splice(0, 2);
        }
        else if (img1Horizontal && img3Horizontal) {
          renderedRows.push(<RenderImageRow images={[img1.src, img3.src]} layout="HH" />);
          allImages.splice(0, 1);
          allImages.splice(1, 1);
        }
        else if (img2Horizontal && img3Horizontal) {
          renderedRows.push(<RenderImageRow images={[img2.src, img3.src]} layout="HH" />);
          allImages.splice(1, 2);
        }
        // Your other conditions below also push JSX elements:
        else if (img1Horizontal && !img2Horizontal && !img3Horizontal) {
          renderedRows.push(<RenderImageRow images={[img1.src, img2.src, img3.src]} layout="HVV" />);
        }
        else if (!img1Horizontal && img2Horizontal && !img3Horizontal) {
          renderedRows.push(<RenderImageRow images={[img1.src, img2.src, img3.src]} layout="HVV" />);
        }
        else if (img1Horizontal && !img2Horizontal && !img3Horizontal) {
          renderedRows.push(<RenderImageRow images={[img1.src, img2.src, img3.src]} layout="HVV" />);
        }
        else if (!img1Horizontal && !img2Horizontal && !img3Horizontal) {
          renderedRows.push(<RenderImageRow images={[img1.src, img2.src, img3.src]} layout="VVV" />);
        }
        allImages.splice(0, 3);
      }
      return <div class="mb-2 flex flex-col gap-2 justify-center">{renderedRows}</div>;
  })()}
<!-- 
    {
      (project.challenges || project.learnings) && (
        <div class="grid grid-cols-1 md:gap-8 md:grid-cols-2 md:mb-8 mb-4">
          {project.challenges && (
            <section>
              <h2 class="mt-0">
                {t.projectDetailPage?.challengesTitle ?? 'Challenges'}
              </h2>
              <p>{project.challenges ?? 'Challenges'}</p>
            </section>
          )}

          {project.learnings && (
            <section>
              <h2 class="mt-0">
                {t.projectDetailPage?.learningsTitle ?? 'Learnings'}
              </h2>
              <p>{project.learnings ?? 'Learnings'}</p>
            </section>
          )}
        </div>
      )
    } -->
<!-- 
    {/* Project and Code URLs */}
    <div class="mt-8 flex flex-wrap gap-4">
      {
        project.projectUrl && (
          <a
            href={project.projectUrl}
            target="_blank"
            rel="noopener noreferrer"
            class={
              buttonVariants({ variant: 'default' }) + ' flex-1 no-underline'
            }
          >
            <ExternalLink className="mr-2 size-4" />
            {t.projectDetailPage?.visitProjectButton ?? 'Visit Project'}
          </a>
        )
      }
      {
        project.codeUrl && (
          <a
            href={project.codeUrl}
            target="_blank"
            rel="noopener noreferrer"
            class={
              buttonVariants({ variant: 'secondary' }) + ' flex-1 no-underline'
            }
          >
            <Code className="mr-2 size-4" />
            {t.projectDetailPage?.viewCodeButton ?? 'View Code'}
          </a>
        )
      }
    </div>
  </article>
</div> -->
